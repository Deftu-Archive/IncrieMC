plugins {
    id "com.github.johnrengelman.shadow" version "$shadowVersion"
    id "com.github.gmazzo.buildconfig" version "$buildConfigVersion" apply false
    id "org.jetbrains.kotlin.jvm" version "$kotlinVersion"
    id "maven-publish"
    id "java"
}

sourceCompatibility = targetCompatibility = "1.8"
compileJava.options.encoding = "UTF-8"
compileKotlin.kotlinOptions.languageVersion = "1.6"
compileKotlin.kotlinOptions.jvmTarget = "1.8"

allprojects {
    apply plugin: "com.github.johnrengelman.shadow"
    apply plugin: "org.jetbrains.kotlin.jvm"
    apply plugin: "java"

    version = projectVersion
    group = projectGroup

    sourceCompatibility = targetCompatibility = "1.8"
    compileJava.options.encoding = "UTF-8"
    compileKotlin.kotlinOptions.languageVersion = "1.6"
    compileKotlin.kotlinOptions.jvmTarget = "1.8"

    configurations {
        shade
        implementation.extendsFrom(shade)
    }

    repositories {
        mavenCentral()
        mavenLocal()

        maven { url "https://jitpack.io/" }
        maven { url "https://repo.spongepowered.org/maven/" }
        maven { url "https://repo.sk1er.club/repository/maven-public/" }
        maven { url "https://repo.sk1er.club/repository/maven-releases/" }
    }

    jar {
        enabled = false
        from "LICENSE"
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
        exclude("META-INF/INDEX.LIST", "META-INF/*.SF", "META-INF/*.DSA", "META-INF/*.RSA", "module-info.class")
    }

    shadowJar {
        archiveClassifier.set("")
        configurations = [project.configurations.shade]
        duplicatesStrategy DuplicatesStrategy.EXCLUDE

        exclude("pack.mcmeta")
        exclude("dummyThing")
        exclude("**/module-info.class")
        exclude("*.so")
        exclude("*.dylib")
        exclude("*.dll")
        exclude("*.jnilib")
        exclude("ibxm/**")
        exclude("com/jcraft/**")
        exclude("org/lwjgl/**")
        exclude("net/java/**")

        exclude("META-INF/proguard/**")
        exclude("META-INF/maven/**")
        exclude("META-INF/versions/**")
        exclude("META-INF/com.android.tools/**")

        exclude('**/*.kotlin_metadata')
        exclude('**/*.kotlin_module')
        exclude('**/*.kotlin_builtins')

        exclude("fabric.mod.json")
    }

    jar.finalizedBy(shadowJar)
}