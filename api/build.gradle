apply plugin: "com.github.gmazzo.buildconfig"

archivesBaseName = projectName

buildConfig {
    className("${projectName}Info")
    packageName("${projectGroup}.api")

    buildConfigField("String", "NAME", "\"${projectName}\"")
    buildConfigField("String", "ID", "\"${projectId}\"")
    buildConfigField("String", "VERSION", "\"${projectVersion}\"")
}

dependencies {
    shade("org.jetbrains.kotlinx:kotlinx-coroutines-core:${kotlinCoroutinesVersion}")
    shade("org.jetbrains.kotlin:kotlin-stdlib-jdk8")

    shade("com.github.KevinPriv:keventbus:${eventBusVersion}")
    shade("xyz.deftu.deftils:Deftils:${deftilsVersion}")
    shade("com.github.ben-manes.caffeine:caffeine:${caffeineVersion}")
    shade("com.squareup.okhttp3:okhttp:${okHttpVersion}")

    implementation("org.spongepowered:mixin:0.7.11-SNAPSHOT")

    implementation("gg.essential:universalcraft-1.18-fabric:${universalCraftVersion}") {
        exclude module: "kotlin-stdlib-jdk8"
        exclude module: "kotlin-reflect"
        exclude module: "minecraft"
        exclude module: "yarn"
        exclude module: "fabric-loader"
        exclude module: "fabric-api"
        exclude module: "forge"
    }
    implementation("gg.essential:elementa-1.18-fabric:${elementaVersion}") {
        exclude module: "kotlin-stdlib-jdk8"
        exclude module: "kotlin-reflect"
        exclude module: "minecraft"
        exclude module: "yarn"
        exclude module: "fabric-loader"
        exclude module: "fabric-api"
        exclude module: "forge"
    }

    implementation("org.apache.logging.log4j:log4j-api:2.17.0")
    implementation("org.apache.logging.log4j:log4j-core:2.17.0")
}

processResources {
    inputs.property("name", projectName)
    inputs.property("id", projectId)
    inputs.property("version", projectVersion)

    filesMatching("fabric.mod.json") {
        expand(
                "name": projectName,
                "id": projectId,
                "version": projectVersion
        )
    }
}

java {
    withJavadocJar()
    withSourcesJar()
}

artifacts {
    archives javadocJar, sourcesJar
}